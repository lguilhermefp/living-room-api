<?xml version="1.0"?>
<doc>
    <assembly>
        <name>living-room-api</name>
    </assembly>
    <members>
        <member name="M:living_room_api.Controllers.ComputersController.GetComputers">
            <summary>
            Retorna uma lista com detalhes de todos os computadores
            </summary>
            <remarks>
                Requisicao padrao:
                    Get api/Computers/
            </remarks>
            <returns>Lista com detalhes de todos os computadores</returns>
            <response code="200">Retorna a lista requisitada</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.ComputersController.GetComputer(System.String)">
            <summary>
            Retorna os detalhes do computador requisitada
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/Computers/abcd-12345
            </remarks>
            <param name="ID"></param>
            <returns>Os detalhes do computador requisitado</returns>
            <response code="200">Retorna o computador requisitado</response>
            <response code="400">Se não houver computador com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.ComputersController.PostComputer(living_room_api.Data.Computer)">
            <summary>
            Cria um novo computador
            </summary>
            <param name="computer"></param>
            <remarks>
                Requisicao padrao:
                    Post api/Computers/
                    
                    No "body", insira os campos ID, Brand, CreationDate, Value, isBeingSold, isDesktop
                    
                    Campo "ID" precisa ter 10 caracteres
            </remarks>
            <returns>Os detalhes do computador criado</returns>
            <response code="201">Retorna os detalhes do computador criado</response>
            <response code="400">Se algum dos campos do "body" da requisicao possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="409">Se ja houver um computador com ID fornecido</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.ComputersController.PutComputer(System.String,living_room_api.Data.Computer)">
            <summary>
            Altera informacoes de um computador existente
            </summary>
            <param name="ID"></param>
            <param name="computer"></param>
            <remarks>
                Exemplo de requisicao:
                    Put api/Computers/abcd-12345
                    
                    No "body", insira sua ID e a atualizacao dos campos ID, Brand, CreationDate(opcional) e isActive
            </remarks>
            <response code="204">Atualiza o computador requisitado</response>
            <response code="400">Se nao existe computador com ID informada ou "body" possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.ComputersController.DeleteComputer(System.String)">
            <summary>
            Exclui um computador existente
            </summary>
            <param name="ID"></param>
            <remarks>
                Exemplo de requisicao:
                    Delete api/Computers/abcd-12345
            </remarks>
            <returns>Retorna os detalhes do computador excluida</returns>
            <response code="204">Exclui um computador existente</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="404">Se nao existe computador com ID informado</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.HomeTheatersController.GetHomeTheaters">
            <summary>
            Retorna uma lista com detalhes de todos os home theaters
            </summary>
            <remarks>
                Requisicao padrao:
                    Get api/HomeTheaters/
            </remarks>
            <returns>Lista com detalhes de todos os home theaters</returns>
            <response code="200">Retorna a lista requisitada</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.HomeTheatersController.GetHomeTheater(System.String)">
            <summary>
            Retorna os detalhes do home theater requisitado
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/HomeTheaters/abcd-12345
            </remarks>
            <param name="ID"></param>
            <returns>Os detalhes do home theater requisitado</returns>
            <response code="200">Retorna o home theater requisitado</response>
            <response code="400">Se não houver home theater com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.HomeTheatersController.PostHomeTheater(living_room_api.Data.HomeTheater)">
            <summary>
            Cria um novo home theater
            </summary>
            <param name="homeTheater"></param>
            <remarks>
                Requisicao padrao:
                    Post api/HomeTheaters/
                    
                    No "body", insira os campos ID, Brand, Model, CreationDate, Value, isBeingSold, readsBlueRay
                    
                    Campo "ID" precisa ter 10 caracteres
            </remarks>
            <returns>Os detalhes do home theater criado</returns>
            <response code="201">Retorna os detalhes do home theater criado</response>
            <response code="400">Se algum dos campos do "body" da requisicao possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="409">Se ja houver um home theater com o ID fornecido</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.HomeTheatersController.PutHomeTheater(System.String,living_room_api.Data.HomeTheater)">
            <summary>
            Altera informacoes de um home theater existente
            </summary>
            <param name="ID"></param>
            <param name="homeTheater"></param>
            <remarks>
                Exemplo de requisicao:
                    Put api/HomeTheater/abcd-12345
                    
                    No "body", insira os campos ID, Brand, Model, CreationDate, Value, isBeingSold, readsBlueRay
            </remarks>
            <response code="204">Atualiza o home theater requisitado</response>
            <response code="400">Se nao existe home theater com ID informada ou "body" possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.HomeTheatersController.DeleteHomeTheater(System.String)">
            <summary>
            Exclui um home theater existente
            </summary>
            <param name="ID"></param>
            <remarks>
                Exemplo de requisicao:
                    Delete api/HomeTheaters/abcd-12345
            </remarks>
            <returns>Retorna os detalhes do home theater excluida</returns>
            <response code="204">Exclui um home theater existente</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="404">Se nao existe home theater com ID informado</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleComputersController.GetPersonComputer">
            <summary>
            Retorna uma lista com detalhes de todos as relacoes entre pessoas e computadores
            </summary>
            <remarks>
                Requisicao padrao:
                    Get api/PeopleComputers/
            </remarks>
            <returns>Lista com detalhes de todos as relacoes entre pessoas e computadores</returns>
            <response code="200">Retorna a lista requisitada</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleComputersController.GetPersonComputers(System.String)">
            <summary>
            Retorna as relacoes entre uma pessoa e um ou mais computadores
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/PeopleComputers/people/abcd-12345
            </remarks>
            <param name="personId"></param>
            <returns>Os detalhes da relacao requisitada</returns>
            <response code="200">Retorna a relacao requisitada</response>
            <response code="400">Se não houver relacao com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleComputersController.GetPeopleComputer(System.String)">
            <summary>
            Retorna as relacoes entre um computador e uma ou mais pessoas
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/PeopleComputers/computers/abcd-12345
            </remarks>
            <param name="computerId"></param>
            <returns>Os detalhes da relacao requisitada</returns>
            <response code="200">Retorna a relacao requisitada</response>
            <response code="400">Se não houver relacao com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleComputersController.PutPersonComputer(System.String,living_room_api.Data.PersonComputer)">
            <summary>
            Altera informacoes de uma relacao existente
            </summary>
            <param name="ID"></param>
            <param name="personComputer"></param>
            <remarks>
                Exemplo de requisicao:
                    Put api/PeopleComputers/abcd-12345
                    
                    No "body", insira sua ID e a atualizacao dos campos PersonId e ComputerId
            </remarks>
            <response code="204">Atualiza a relacao requisitada</response>
            <response code="400">Se nao existe relacao com ID informado ou "body" possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleComputersController.PostPersonComputer(living_room_api.Data.PersonComputer)">
            <summary>
            Cria uma nova relacao entre pessoa e computador
            </summary>
            <param name="personComputer"></param>
            <remarks>
                Requisicao padrao:
                    Post api/PeopleComputers/
                    
                    No "body", insira os campos ID, PersonId e ComputerId
                    
                    Campo "ID" precisa ter 10 caracteres
            </remarks>
            <returns>Os detalhes da relacao criada</returns>
            <response code="201">Retorna os detalhes da relacao criada</response>
            <response code="400">Se algum dos campos do "body" da requisicao possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="409">Se ja houver uma relacao com ID fornecido</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleComputersController.DeletePersonComputer(System.String)">
            <summary>
            Exclui uma relacao existente
            </summary>
            <param name="ID"></param>
            <remarks>
                Exemplo de requisicao:
                    Delete api/ComputersPeople/abcd-12345
            </remarks>
            <returns>Retorna os detalhes da relacao excluida</returns>
            <response code="204">Exclui uma relacao existente</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="404">Se nao existe uma relacao com ID informado</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleController.GetPeople">
            <summary>
            Retorna uma lista com detalhes de todos as pessoas
            </summary>
            <remarks>
                Requisicao padrao:
                    Get api/People/
            </remarks>
            <returns>Lista com detalhes de todas as pessoas</returns>
            <response code="200">Retorna a lista requisitada</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleController.GetPerson(System.String)">
            <summary>
            Retorna os detalhes da pessoa requisitada
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/People/abcd-12345
            </remarks>
            <param name="ID"></param>
            <returns>Os detalhes da pessoa requisitada</returns>
            <response code="200">Retorna a pessoa requisitada</response>
            <response code="400">Se não houver pessoa com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleController.PutPerson(System.String,living_room_api.Data.Person)">
            <summary>
            Altera informacoes de uma pessoa existente
            </summary>
            <param name="ID"></param>
            <param name="person"></param>
            <remarks>
                Exemplo de requisicao:
                    Put api/People/abcd-12345
                    
                    No "body", insira sua ID e a atualizacao dos campos Nome, Email e Senha
            </remarks>
            <response code="204">Atualiza a pessoa requisitada</response>
            <response code="400">Se nao existe pessoa com ID informada ou "body" possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleController.PostPerson(living_room_api.Data.Person)">
            <summary>
            Cria uma nova pessoa
            </summary>
            <param name="person"></param>
            <remarks>
                Requisicao padrao:
                    Post api/People/
                    
                    No "body", insira os campos ID, Name, Email e Password
                    
                    Campo "ID" precisa ter 10 caracteres
            </remarks>
            <returns>Os detalhes da pessoa criada</returns>
            <response code="201">Retorna os detalhes da pessoa criada</response>
            <response code="400">Se algum dos campos do "body" da requisicao possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="409">Se ja houver uma pessoa com ID ou Email fornecidos</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleController.DeletePerson(System.String)">
            <summary>
            Exclui uma pessoa existente
            </summary>
            <param name="ID"></param>
            <remarks>
                Exemplo de requisicao:
                    Delete api/People/abcd-12345
            </remarks>
            <returns>Retorna os detalhes da pessoa excluido</returns>
            <response code="204">Exclui uma pessoa existente</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="404">Se nao existe uma pessoa com ID informado</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleHomeTheatersController.GetPersonHomeTheater">
            <summary>
            Retorna uma lista com detalhes de todos as relacoes entre pessoas e home theaters
            </summary>
            <remarks>
                Requisicao padrao:
                    Get api/PeopleHomeTheaters/
            </remarks>
            <returns>Lista com detalhes de todos as relacoes entre pessoas e home theaters</returns>
            <response code="200">Retorna a lista requisitada</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleHomeTheatersController.GetPersonHomeTheaters(System.String)">
            <summary>
            Retorna as relacoes entre uma pessoa e um ou mais home theaters
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/PeopleHomeTheaters/people/abcd-12345
            </remarks>
            <param name="personId"></param>
            <returns>Os detalhes da relacao requisitada</returns>
            <response code="200">Retorna a relacao requisitada</response>
            <response code="400">Se não houver relacao com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleHomeTheatersController.GetPeopleHomeTheater(System.String)">
            <summary>
            Retorna as relacoes entre um home theater e uma ou mais pessoas
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/PeopleHomeTheaters/homeTheaters/abcd-12345
            </remarks>
            <param name="homeTheaterId"></param>
            <returns>Os detalhes da relacao requisitada</returns>
            <response code="200">Retorna a relacao requisitada</response>
            <response code="400">Se não houver relacao com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleHomeTheatersController.PutPersonHomeTheater(System.String,living_room_api.Data.PersonHomeTheater)">
            <summary>
            Altera informacoes de uma relacao existente
            </summary>
            <param name="ID"></param>
            <param name="personHomeTheater"></param>
            <remarks>
                Exemplo de requisicao:
                    Put api/PeopleHomeTheaters/abcd-12345
                    
                    No "body", insira sua ID e a atualizacao dos campos PersonId e HomeTheaterId
            </remarks>
            <response code="204">Atualiza a relacao requisitada</response>
            <response code="400">Se nao existe relacao com ID informado ou "body" possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleHomeTheatersController.PostPersonHomeTheater(living_room_api.Data.PersonHomeTheater)">
            <summary>
            Cria uma nova relacao entre pessoa e home theater
            </summary>
            <param name="personHomeTheater"></param>
            <remarks>
                Requisicao padrao:
                    Post api/PeopleHomeTheaters/
                    
                    No "body", insira os campos ID, PersonId e HomeTheaterId
                    
                    Campo "ID" precisa ter 10 caracteres
            </remarks>
            <returns>Os detalhes da relacao criada</returns>
            <response code="201">Retorna os detalhes da relacao criada</response>
            <response code="400">Se algum dos campos do "body" da requisicao possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="409">Se ja houver uma relacao com ID fornecido</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleHomeTheatersController.DeletePersonHomeTheater(System.String)">
            <summary>
            Exclui uma relacao existente
            </summary>
            <param name="ID"></param>
            <remarks>
                Exemplo de requisicao:
                    Delete api/PeopleHomeTheater/abcd-12345
            </remarks>
            <returns>Retorna os detalhes da relacao excluida</returns>
            <response code="204">Exclui uma relacao existente</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="404">Se nao existe uma relacao com ID informado</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleTelevisionsController.GetPersonTelevision">
            <summary>
            Retorna uma lista com detalhes de todas as relacoes entre pessoas e televisoes
            </summary>
            <remarks>
                Requisicao padrao:
                    Get api/PeopleTelevisions/
            </remarks>
            <returns>Lista com detalhes de todos as relacoes entre pessoas e televisoes</returns>
            <response code="200">Retorna a lista requisitada</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleTelevisionsController.GetPersonCTelevision(System.String)">
            <summary>
            Retorna as relacoes entre uma pessoa e uma ou mais televisoes
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/PeopleTelevisions/people/abcd-12345
            </remarks>
            <param name="personId"></param>
            <returns>Os detalhes da relacao requisitada</returns>
            <response code="200">Retorna a relacao requisitada</response>
            <response code="400">Se não houver relacao com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleTelevisionsController.GetPeopleTelevision(System.String)">
            <summary>
            Retorna as relacoes entre uma televisao e uma ou mais pessoas
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/PeopleTelevisions/televisions/abcd-12345
            </remarks>
            <param name="televisionId"></param>
            <returns>Os detalhes da relacao requisitada</returns>
            <response code="200">Retorna a relacao requisitada</response>
            <response code="400">Se não houver relacao com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleTelevisionsController.PutPersonTelevision(System.String,living_room_api.Data.PersonTelevision)">
            <summary>
            Altera informacoes de uma relacao existente
            </summary>
            <param name="ID"></param>
            <param name="personTelevision"></param>
            <remarks>
                Exemplo de requisicao:
                    Put api/PeopleTelevisions/abcd-12345
                    
                    No "body", insira sua ID e a atualizacao dos campos PersonId e TelevisionId
            </remarks>
            <response code="204">Atualiza a relacao requisitada</response>
            <response code="400">Se nao existe relacao com ID informado ou "body" possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleTelevisionsController.PostPersonTelevision(living_room_api.Data.PersonTelevision)">
            <summary>
            Cria uma nova relacao entre pessoa e televisao
            </summary>
            <param name="personTelevision"></param>
            <remarks>
                Requisicao padrao:
                    Post api/PeopleTelevisions/
                    
                    No "body", insira os campos ID, PersonId e TelevisionId
                    
                    Campo "ID" precisa ter 10 caracteres
            </remarks>
            <returns>Os detalhes da relacao criada</returns>
            <response code="201">Retorna os detalhes da relacao criada</response>
            <response code="400">Se algum dos campos do "body" da requisicao possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="409">Se ja houver uma relacao com ID fornecido</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.PeopleTelevisionsController.DeletePersonTelevision(System.String)">
            <summary>
            Exclui uma relacao existente
            </summary>
            <param name="ID"></param>
            <remarks>
                Exemplo de requisicao:
                    Delete api/PeopleTelevisions/abcd-12345
            </remarks>
            <returns>Retorna os detalhes da relacao excluida</returns>
            <response code="204">Exclui uma relacao existente</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="404">Se nao existe uma relacao com ID informado</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.TelevisionsController.GetTelevisions">
            <summary>
            Retorna uma lista com detalhes de todas as televisoes
            </summary>
            <remarks>
                Requisicao padrao:
                    Get api/Televisions/
            </remarks>
            <returns>Lista com detalhes de todas as televisoes</returns>
            <response code="200">Retorna a lista requisitada</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se houve falha na conexao com o banco de dados</response>
        </member>
        <member name="M:living_room_api.Controllers.TelevisionsController.GetTelevision(System.String)">
            <summary>
            Retorna os detalhes da televisao requisitada
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/Televisions/abcd-12345
            </remarks>
            <param name="ID"></param>
            <returns>Os detalhes da televisao requisitada</returns>
            <response code="200">Retorna a televisao requisitada</response>
            <response code="400">Se não houver televisao com esse ID</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retournou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.TelevisionsController.PostTelevision(living_room_api.Data.Television)">
            <summary>
            Cria uma nova televisao
            </summary>
            <param name="television"></param>
            <remarks>
                Requisicao padrao:
                    Post api/Televisions/
                    
                    No "body", insira os campos ID, Brand, Model, CreationDate, Value, is3D, isBeingSold
                    
                    Campo "ID" precisa ter 10 caracteres
            </remarks>
            <returns>Os detalhes da televisao criada</returns>
            <response code="201">Retorna os detalhes da televisao criada</response>
            <response code="400">Se algum dos campos do "body" da requisicao possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="409">Se ja houver uma televisao com ID fornecido</response>
            <response code="500">Se o banco de dados retournou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.TelevisionsController.PutTelevision(System.String,living_room_api.Data.Television)">
            <summary>
            Altera informacoes de uma televisao existente
            </summary>
            <param name="ID"></param>
            <param name="television"></param>
            <remarks>
                Exemplo de requisicao:
                    Put api/Television/abcd-12345
                    
                    No "body", insira os campos ID, Brand, Model, CreationDate, Value, is3D, isBeingSold
            </remarks>
            <response code="204">Atualiza a televisao requisitada</response>
            <response code="400">Se nao existe televisao com ID informada ou "body" possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retournou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.TelevisionsController.DeleteTelevision(System.String)">
            <summary>
            Exclui uma televisao existente
            </summary>
            <param name="ID"></param>
            <remarks>
                Exemplo de requisicao:
                    Delete api/Televisions/abcd-12345
            </remarks>
            <returns>Retorna os detalhes da televisao excluida</returns>
            <response code="204">Exclui uma televisao existente</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="404">Se nao existe televisao com ID informado</response>
            <response code="500">Se o banco de dados retournou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.UsersController.AuthenticateAsync(living_room_api.Data.User)">
            <summary>
            Retorna um token de acesso a api para usuarios autorizados
            </summary>
            <param name="user"></param>
            <returns>Um token de acesso a api para usuarios autorizados</returns>
            <remarks>
                Requisicao padrao:
                    Post api/Users/authenticate
                    
                No "body", insira os campos ID, Name, Email e Password
            
                Usuario generico (nao pode ser apagado):
                    { "ID": "admin-1234", "Name": "admin", "Email": "admin@example.com", "Password": "admin123" }
                
            </remarks>
            <response code="200">Retorna um token de acesso a api</response>
            <response code="400">Se algum campo inserido possui valor invalido</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.UsersController.GetUser">
            <summary>
            Retorna uma lista com detalhes de todos os usuarios
            </summary>
            <remarks>
                Requisicao padrao:
                    Get api/Users/
            </remarks>
            <returns>Lista com detalhes de todos os usuarios</returns>
            <response code="200">Retorna a lista requisitada</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se houve falha na conexao com o banco de dados</response>
        </member>
        <member name="M:living_room_api.Controllers.UsersController.GetUser(System.String)">
            <summary>
            Retorna os detalhes do usuario requisitado
            </summary>
            <remarks>
                Exemplo de requisicao:
                    GET api/Users/abcd-12345
            </remarks>
            <param name="ID"></param>
            <returns>Os detalhes do usuario requisitado</returns>
            <response code="200">Retorna o usuario requisitado</response>
            <response code="400">Se não houver usuario com essa identificacao</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.UsersController.PostUser(living_room_api.Data.User)">
            <summary>
            Cria um novo usuario
            </summary>
            <param name="user"></param>
            <remarks>
                Requisicao padrao:
                    Post api/Users/
                    
                    No "body", insira os campos ID, Name, Email e Password
                    
                    Campo "ID" precisa ter 10 caracteres
            </remarks>
            <returns>Os detalhes do usuario criado</returns>
            <response code="201">Retorna os detalhes do usuario criado</response>
            <response code="400">Se algum dos campos do "body" da requisicao possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="409">Se ja houver um usuario com ID ou Email fornecidos</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.UsersController.PutUser(System.String,living_room_api.Data.User)">
            <summary>
            Altera informacoes de um usuario existente
            </summary>
            <param name="ID"></param>
            <param name="user"></param>
            <remarks>
                Exemplo de requisicao:
                    Put api/User/abcd-12345
                    
                    No "body", insira seu ID e a atualizacao dos campos Name, Email e Password
            </remarks>
            <response code="204">Atualiza o usuario requisitado</response>
            <response code="400">Se nao existe usuario com ID informado ou "body" possui valor invalido ou o formato e ilegivel</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
        <member name="M:living_room_api.Controllers.UsersController.DeleteUser(System.String)">
            <summary>
            Exclui um usuario existente
            </summary>
            <param name="ID"></param>
            <remarks>
                Exemplo de requisicao:
                    Delete api/Users/abcd-12345
            </remarks>
            <returns>Retorna os detalhes do usuario excluido</returns>
            <response code="204">Exclui um usuario existente</response>
            <response code="401">Se o autor da requisicao nao possui autorizacao</response>
            <response code="404">Se nao existe usuario com ID informado</response>
            <response code="500">Se o banco de dados retornou erro</response>
        </member>
    </members>
</doc>
